{"version":3,"sources":["components/Nav/Nambar.module.css","components/Tasks/Task1/Msg/Msg.module.css","components/Tasks/Task1/Task1.module.css","components/Tasks/Task1/Fio/Fio.module.css","components/Tasks/Task2/Task2.module.css","components/Header/Header.module.css","components/Tasks/Task3/Task3.module.css","components/Tasks/Task3/Span/Span.module.css","components/Tasks/Task3/Input/Input.module.css","components/Tasks/Task3/Button/Button.module.css","components/Tasks/Task3/Names/Names.module.css","components/Nav/Navbar.jsx","components/Tasks/Task1/Msg/Msg.jsx","components/Tasks/Task1/Fio/Fio.jsx","components/Tasks/Task1/Task1.jsx","components/Tasks/Task2/Task2.jsx","components/Header/Header.jsx","components/Tasks/Task3/Span/Span.jsx","components/Tasks/Task3/Input/Input.jsx","components/Tasks/Task3/Button/Button.jsx","components/Tasks/Task3/Names/Names.jsx","components/Tasks/Task3/Task3.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","activLink","Msg","props","msgPos","usr1","usr2","message","name","msg","timestamp","time","Fio","fio","Task1","task","qualitysArr","quality","Task2","render","qArr","map","arr","index","key","colTaskModule2","React","Component","Header","header","Span","spn","this","value","Input","inp","type","placeholder","onChange","event","updateAlert","target","Button","val","btn","onClick","updateData","Names","namesElements","names","Task3","state","spanVal","length","alert","setState","addName","newName","newNames","App","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b2b35acb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nambar_nav__2ADrQ\",\"item\":\"Nambar_item__8ms2j\",\"activLink\":\"Nambar_activLink__32mae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Msg_message__2SIZO\",\"timestamp\":\"Msg_timestamp__1wKYx\",\"name\":\"Msg_name__3CU3O\",\"usr1\":\"Msg_usr1__3zp_O\",\"usr2\":\"Msg_usr2__14qAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task1_task__2Uvd-\",\"fio\":\"Task1_fio__3wkvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fio\":\"Fio_fio__36w1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colTaskModule2\":\"Task2_colTaskModule2___4QV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__qHyPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task3_task__2Izbc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spn\":\"Span_spn__2RBY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inp\":\"Input_inp__voiWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__zkj2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spn\":\"Names_spn__20euA\"};","import React from \"react\";\r\nimport s from \"./Nambar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => (\r\n    <div className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/task1\" activeClassName={s.activLink}>Task1</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/task2\" activeClassName={s.activLink}>Task2</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/task3\" activeClassName={s.activLink}>Task3,4</NavLink>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Msg.module.css\"\r\n\r\nconst Msg = (props) => (\r\n    <div className={props.msgPos === 'usr1' ? s.usr1 : s.usr2}>\r\n        <div className={s.message}>\r\n            <p className={s.name}>{props.name}</p>\r\n            {props.msg}\r\n            <span className={s.timestamp}>{props.time}</span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Msg;","import React from \"react\";\r\nimport s from \"./Fio.module.css\"\r\n\r\nconst Fio = (props) => (\r\n    <div className={s.fio}>\r\n        <h1>Артём Москалёв</h1>\r\n    </div>\r\n);\r\nexport default Fio;","import React from \"react\";\r\nimport s from \"./Task1.module.css\"\r\nimport Msg from \"./Msg/Msg\";\r\nimport Fio from \"./Fio/Fio\";\r\n\r\nconst Task1 = () => (\r\n    <div className={s.task}>\r\n        <Fio/>\r\n        <Msg name=\"Артём Москалёв\"\r\n             msg=\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\"\r\n             time=\"10:20\" msgPos=\"usr1\"/>\r\n        <Msg name=\"Дима К\"\r\n             msg=\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aut cumque id libero nam omnis provident ratione repellat saepe ullam voluptatem. Architecto commodi debitis facilis maiores possimus quia reprehenderit totam voluptate?\"\r\n             time=\"10:22\" msgPos=\"usr2\"/>\r\n\r\n    </div>\r\n);\r\n\r\nexport default Task1;","import React from \"react\";\r\nimport s from \"./Task2.module.css\"\r\n\r\n\r\n/*const qualitysArr = [\r\n    {quality: 'рационалист', style: ''},\r\n    {quality: 'комуннист', style: s.colTaskModule2},\r\n    {quality: 'анимешник', style: ''}\r\n];*/\r\n\r\nconst qualitysArr = [\r\n    {quality: 'рационалист'},\r\n    {quality: 'комуннист'},\r\n    {quality: 'анимешник'}\r\n];\r\n\r\n\r\nclass Task2 extends React.Component {\r\n    render = () => {\r\n        let qArr = qualitysArr.map((arr, index) =>\r\n            /*<div key={index} className = {arr.style}>\r\n                <span>{arr.quality}</span>\r\n            </div>*/\r\n            <div key={index} className = {index === 1 ? s.colTaskModule2 : ''}>\r\n                <span>{arr.quality}</span>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                {qArr}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task2;","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => (\r\n    <header className={s.header}>\r\n\r\n    </header>\r\n);\r\nexport default Header","import React from \"react\";\r\nimport s from \"./Span.module.css\"\r\n\r\nclass Span extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.spn}>\r\n                <span>{this.props.value}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Span;","import React from \"react\";\r\nimport s from \"./Input.module.css\"\r\n\r\nclass Input extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.inp}>\r\n                <input type=\"text\" value={this.props.value} placeholder=\"Введите Имя...\" onChange={event => { this.props.updateAlert(event.target.value)}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;","import React from \"react\";\r\nimport s from \"./Button.module.css\"\r\n\r\n\r\nclass Button extends React.Component {\r\n    render() {\r\n        let val = this.props.value+1;\r\n        return (\r\n            <div className={s.btn}>\r\n                <button onClick={() => { this.props.updateData(val)}}>Click me!</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport s from \"./Names.module.css\";\r\n\r\nclass Names extends React.Component {\r\n    render = () => {\r\n        let namesElements = this.props.names.map(item => <div>{item.name}</div>);\r\n        return (\r\n            <div className=\"\">\r\n                {namesElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Names;","import React from \"react\";\r\nimport s from \"./Task3.module.css\"\r\nimport Span from \"./Span/Span\";\r\nimport Input from \"./Input/Input\";\r\nimport Button from \"./Button/Button\";\r\nimport Names from \"./Names/Names\";\r\n\r\nclass Task3 extends React.Component {\r\n    state = {\r\n        names: [],\r\n        spanVal: 0,\r\n        msg: ''\r\n    };\r\n\r\n    updateData = (value) => {\r\n        if(this.state.msg.length > 0)\r\n            alert(\"Привет \" + this.state.msg);\r\n        this.setState({ spanVal: value, msg:''})\r\n        this.addName(this.state.msg);\r\n    }\r\n\r\n    updateAlert = (value) => {\r\n        this.setState({ msg: value})\r\n    }\r\n\r\n    addName = (value) => {\r\n        let newName = {\r\n            name: value\r\n        };\r\n        let newNames = [...this.state.names, newName];\r\n        this.setState({\r\n            names: newNames\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.task}>\r\n                <Span value = {this.state.spanVal}/>\r\n                <Button value = {this.state.spanVal} updateData={this.updateData} />\r\n                <Input value = {this.state.msg} updateAlert={this.updateAlert}/>\r\n                <Names names = {this.state.names}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task3;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Nav/Navbar\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport Task1 from \"./components/Tasks/Task1/Task1\";\r\nimport Task2 from \"./components/Tasks/Task2/Task2\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Task3 from \"./components/Tasks/Task3/Task3\";\r\n\r\nconst App = () => (\r\n    <HashRouter>\r\n        <div className=\"app-wrapper\">\r\n            <Header />\r\n            <Navbar />\r\n            <div className='app-wrapper-content'>\r\n                <Route path='/task1' component={Task1}/>\r\n                <Route path='/task2' component={Task2}/>\r\n                <Route path='/task3' component={Task3}/>\r\n            </div>\r\n        </div>\r\n    </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}